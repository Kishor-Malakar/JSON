// 1.1  
db.createCollection("customers");
db.createCollection("orders");

db.customers.insertMany([
  { 
    name: "Doraemon", 
    email: "doraemon@gmail.com", 
    address: { street: "Funshi", city: "Disneyland", zipcode: "837393" }, 
    phone: "9374524262", 
    registration_date: new Date("2024-23-03T12:00:00Z")
  },
  { 
    name: "Kishor Malakar", 
    email: "malakarkishor24@gmail.com", 
    address: { street: "Tlangnuam", city: "Aizawl", zipcode: "796001" }, 
    phone: "9863577542", 
    registration_date: new Date("2024-20-10T12:00:00Z")
  },
  { 
    name: "Naruto Uzumaki", 
    email: "naruto@gmail.com", 
    address: { street: "Konoha", city: "Leaf City", zipcode: "898283" }, 
    phone: "7005364145", 
    registration_date: new Date("2024-25-10T12:00:00Z")
  },
  { 
    name: "Roby Tom", 
    email: "robytom@gmail.com", 
    address: { street: "New Lane", city: "Hyderabad", zipcode: "273842" }, 
    phone: "8415045833", 
    registration_date: new Date("2024-15-10T12:00:00Z")
  },
  { 
    name: "Arvind", 
    email: "arvind@gmail.com", 
    address: { street: "Park Street", city: "Khatla", zipcode: "788781" }, 
    phone: "9863227232", 
    registration_date: new Date("2024-09-10T12:00:00Z")
  }
]);

db.orders.insertMany([
  { 
    order_id: "ORD123456", 
    customer_id: ObjectId("67337d8847941e05390d8190"), 
    order_date: new Date("2023-05-15T14:00:00Z"),
    status: "shipped", 
    items: [
      { product_name: "E-Bottle", quantity: 1, price: 3000 },
      { product_name: "Laptop Charger", quantity: 1, price: 2000 }
    ], 
    total_value: 5000 
  },
  { 
    order_id: "ORD123457", 
    customer_id: ObjectId("67337d8847941e05390d8191"), 
    order_date: new Date("2024-19-10T10:30:00Z"),
    status: "shipped", 
    items: [
      { product_name: "Charger", quantity: 1, price: 2000 },
      { product_name: "USB Cable", quantity: 2, price: 300 }
    ], 
    total_value: 2600
  },
  { 
    order_id: "ORD123458", 
    customer_id: ObjectId("67337d8847941e05390d8192"), 
    order_date: new Date("2024-20-10T13:00:00Z"),
    status: "shipped", 
    items: [
      { product_name: "UPS", quantity: 1, price: 5000 },
      { product_name: "Monitor", quantity: 1, price: 20000 }
    ], 
    total_value: 25000 
  },
  { 
    order_id: "ORD123459", 
    customer_id: ObjectId("67337d8847941e05390d8193"), 
    order_date: new Date("2024-17-10T15:45:00Z"),
    status: "delivered", 
    items: [
      { product_name: "Mouse", quantity: 1, price: 1400 },
      { product_name: "Keyboard", quantity: 1, price: 2500 }
    ], 
    total_value: 3900
  },
  { 
    order_id: "ORD123460", 
    customer_id: ObjectId("67337d8847941e05390d8194"), 
    order_date: new Date("2024-11-10T09:00:00Z"),
    status: "delivered", 
    items: [
      { product_name: "CPU", quantity: 1, price: 25000 },
      { product_name: "GPU", quantity: 1, price: 25000 }
    ], 
    total_value: 50000
  }
]);


// 1.2
const customer = db.customers.findOne({ name: "Kishor Malakar" });
const orders = db.orders.find({ customer_id: customer._id }).toArray();
printjson(orders);

// 1.3
const order = db.orders.findOne({ order_id: "ORD123458" });
const customerDetails = db.customers.findOne({ _id: order.customer_id });
printjson(customerDetails);

// 1.4
db.orders.updateOne(
  { order_id: "ORD123458" },
  { $set: { status: "delivered" } }
);
// 1.5
db.orders.deleteOne({ order_id: "ORD123457" });

// 2.1
db.orders.aggregate([
  {
    $group: {
      _id: "$customer_id",
      total_spent: { $sum: "$total_value" }
    }
  },
  {
    $lookup: {
      from: "customers",
      localField: "_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      total_spent: 1
    }
  }
]);

// 2.2
db.orders.aggregate([
  {
    $group: {
      _id: "$status",
      count: { $sum: 1 }
    }
  }
]);
// 2.3
db.orders.aggregate([
  {
    $sort: { order_date: -1 } 
  },
  {
    $group: {
      _id: "$customer_id",
      most_recent_order: { $first: "$$ROOT" }
    }
  },
  {
    $lookup: {
      from: "customers",
      localField: "_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      customer_email: "$customer_info.email",
      order_id: "$most_recent_order.order_id",
      total_value: "$most_recent_order.total_value",
      order_date: "$most_recent_order.order_date"
    }
  }
]);

// 2.4
db.orders.aggregate([
  {
    $sort: { total_value: -1 } 
  },
  {
    $group: {
      _id: "$customer_id",
      most_expensive_order: { $first: "$$ROOT" }
    }
  },
  {
    $lookup: {
      from: "customers",
      localField: "_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      order_id: "$most_expensive_order.order_id",
      total_value: "$most_expensive_order.total_value"
    }
  }
]);
// 3.1
const lastMonth = new Date();
lastMonth.setMonth(lastMonth.getMonth() - 1);

db.orders.aggregate([
  {
    $match: { order_date: { $gte: lastMonth } }
  },
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      customer_email: "$customer_info.email",
      most_recent_order_date: "$order_date"
    }
  }
]);
// 3.2
const customer = db.customers.findOne({ name: "Kishor Malakar" });

db.orders.aggregate([
  { $match: { customer_id: customer._id } },
  { $unwind: "$items" },
  {
    $group: {
      _id: "$items.product_name",
      total_quantity: { $sum: "$items.quantity" }
    }
  },
  {
    $project: {
      product_name: "$_id",
      total_quantity: 1
    }
  }
]);
// 3.3
db.orders.aggregate([
  {
    $group: {
      _id: "$customer_id",
      total_spent: { $sum: "$total_value" }
    }
  },
  {
    $sort: { total_spent: -1 } 
  },
  { $limit: 3 },
  {
    $lookup: {
      from: "customers",
      localField: "_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      total_spent: 1
    }
  }
]);
// 3.4
const Kishor = db.customers.findOne({ name: "Kishor Malakar" });

db.orders.insertOne({
  order_id: "ORD123461",
  customer_id: Kishor._id,
  order_date: new Date("2024-11-12T09:00:00Z"),
  status: "pending",
  items: [
    { product_name: "Smartphone", quantity: 1, price: 30000 },
    { product_name: "Headphones", quantity: 1, price: 6000 }
  ],
  total_value: 36000
});

// 4.1
db.customers.aggregate([
  {
    $lookup: {
      from: "orders",
      localField: "_id",
      foreignField: "customer_id",
      as: "orders"
    }
  },
  {
    $match: { "orders": { $size: 0 } }
  },
  {
    $project: {
      customer_name: 1,
      customer_email: 1
    }
  }
]);
// 4.2
db.orders.aggregate([
  {
    $project: {
      number_of_items: { $size: "$items" }
    }
  },
  {
    $group: {
      _id: null,
      average_items: { $avg: "$number_of_items" }
    }
  }
]);
// 4.3
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  {
    $unwind: "$customer_info"
  },
  {
    $project: {
      customer_name: "$customer_info.name",
      customer_email: "$customer_info.email",
      order_id: 1,
      total_value: 1,
      order_date: 1
    }
  }
]);
